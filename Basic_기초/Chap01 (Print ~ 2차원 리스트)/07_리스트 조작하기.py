# 리스트에는 여러가지 기능이 있다
# 리스트에 요소를 추가하는 메서드 3가지
# append: 요소 하나를 추가
# extend: 리스트를 연결하여 확장
# insert: 특정 인덱스에 요소 추가

# append
# append는 리스트의 끝에 요소를 하나 추가해준다. [1, 2, 3] 으로 이루어진 리스트에 5를 추가하여 [1, 2, 3, 5] 가 되게 한다.
a = [1, 2, 3]
print(a) # [1, 2, 3] 출력
len(a) # 3
a.append(4)
print(a) # [1, 2, 3, 4] 출력
len(a) # 4

# 리스트 안에 리스트를 넣기 (중첩 리스트 만들기)
a = [5, 10, 15]
len(a) # 3
a.append([20, 25, 30])
print(a) # [5, 10, 15, [20, 25, 30]] 출력
len(a) # 4 a.append([20, 25, 30])는 [20, 25, 30] 라는 요소를 하나 넣은것이기에 리스트의 길이는 1만 증가한다

# 리스트 확장하기
# 리스트에 요소를 여러 개 추가하려면 append를 여러 번 사용하는 방법도 있지만, 추가할 요소가 많은 경우에는 상당히 번거롭습니다. 이때는 extend를 사용합니다.
# 또한 extends 를 사용하면 위에서 처럼 길이를 출력할때도 넣은값들 만큼 잘 출력됩니다.
a = [1, 10, 20]
len(a) # 3
print(a) # [1, 10, 20]
a.extend([5, 165])
print(a) # [1, 10, 20, 5, 165]
len(a) # 5

# 리스트의 특정 인덱스에 요소 추가하기
# append, extend는 리스트 끝에 요소를 추가합니다. 그러면 원하는 위치에 요소를 추가하는 방법은 없을까요? 이때는 insert를 사용합니다.
# insert(인덱스, 요소)는 리스트의 특정 인덱스에 요소 하나를 추가합니다.
a = [1, 10, 20]
a.insert(2, 100)
print(a) # [1, 10, 100, 20]

# 리스트의 맨 앞에 넣기
a = [1, 10, 20]
a.insert(0, 100)
print(a) # [100, 1, 10, 20]

# 리스트의 끝에 넣기
a = [1, 10, 20]
a.insert(len(a), 100)
print(a) # [1, 10, 20, 100]

# 리스트에서 요소 삭제하기
# 요소를 삭제하는 메서드는 2가지가 있습니다
# pop: 마지막 요소 또는 특정 인덱스의 요소를 삭제
# remove: 특정 값을 찾아서 삭제
a = [1, 10, 20]
a.pop()
print(a) # [1, 10]

# pop 에 인덱스 값 넣어주기
a = [1, 10, 20]
a.pop(1)
print(a) # [1, 20]

# 리스트에서 특정 값을 찾아서 삭제하기
# remove(값)을 해주면 값에 해당하는 걸 리스트에서 삭제합니다.
a = [1, 10, 20]
a.remove(1)
print(a) # [10, 20]

# 만약 같은값이 있다면 처음찾은 값만 삭제한다.
a = [1, 10, 20, 1]
a.remove(1)
print(a) # [10, 20, 1]

# 리스트에서 특정 값의 인덱스 구하기
# index(값) 을 통해서 해당 값의 인덱스 번호를 찾을수 있다
a = [1, 10, 20]
a.index(10) # 1

# 특정 값의 개수 구하기
# count(값) 으로 값과 같은 요소들이 몇개나 있는지 알수있다.
a = [1, 10, 20, 10, 10]
a.count(10) # 3

# 리스트의 순서를 뒤집기
# reverse()는 리스트에서 요소의 순서를 반대로 뒤집는다.
a = [1, 2, 3, 4, 5]
a.reverse()
print(a) # [5, 4, 3, 2, 1]
